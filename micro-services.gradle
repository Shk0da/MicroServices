apply plugin: 'idea'

subprojects { project ->
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group = 'com.github.shk0da.micro'
    version = 'v1'
    sourceCompatibility = 1.8

    jar {
        enabled = true
        baseName = "${project.name}-original"
    }

    tasks.withType(Jar) {
        destinationDir = file("$rootDir/builds/")
    }

    tasks['clean'].doFirst {
        delete file("$rootDir/builds/")
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        compile('org.springframework.boot:spring-boot-starter-webflux')
        compile('org.springframework.boot:spring-boot-starter-undertow')
        runtime('org.springframework.boot:spring-boot-devtools')
        testCompile('org.springframework.boot:spring-boot-starter-test')
        testCompile('io.projectreactor:reactor-test')
    }

    configurations {
        compile.exclude module: 'spring-boot-starter-tomcat'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:Finchley.RELEASE"
        }
    }
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.4.RELEASE")
    }
}

gradle.buildFinished { buildResult ->
    if (!buildResult.failure && buildResult.getAction() == 'Build') {
        subprojects.findAll().forEach({
            delete "${rootDir}/builds/${it.name}-original-${it.version}.jar"
        })

        copy {
            into "$rootDir/builds/" from 'micro/src/main/resources/bootstrap-build.properties'
            rename 'bootstrap-build.properties', 'bootstrap.properties'
        }
    }
}